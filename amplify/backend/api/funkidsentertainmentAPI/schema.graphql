type Users @model @auth(rules: [{allow: groups, groups: ["AppAdmin"], operations: [read, create, update, delete]}]) {
  id: ID!
  name: String!
  email: AWSEmail!
  username: String!
  UsersProfile: UsersProfile @hasOne
}

enum OverallSiteRatingValues {
  GOOD
  AVERAGE
  BAD
}

enum FeedbackTypeValues {
  GENERAL_FEEDBACK
  REPORT_PROBLEM
  FEATURE_REQUEST
}

type ContactUs @model @auth(rules: [{allow: groups, groups: ["AppAdmin"], operations: [create, read, update, delete]}, {allow: owner, operations: [create, read, update]}, {allow: private, operations: [create, read, update]}, {allow: public, operations: [create, read, update]}]) {
  id: ID!
  firstname: String
  email: AWSEmail!
  feedbackType: FeedbackTypeValues
  overallSiteRating: OverallSiteRatingValues
  message: String
}

enum AmusementTypeNameValues {
  PLAYGROUND
  AMUSEMENT_PARK
  EXHIBITION
  NATURE_ANIMALS
  WATER_PARK
  MUSEUM
  BEACH
  LANDSCAPE
}

enum SiteAgeRangesValues {
  FAMILY_ACTIVITIES
  TODDLER
  PRESCHOOLER
  SCHOOL_AGED_CHILD
  ALL_AGES_KIDS
  ADOLESCENTS_ADULTS
}

type UsersProfile @model @auth(rules: [{allow: groups, groups: ["AppAdmin"], operations: [create, read, update, delete]}, {allow: owner, operations: [read, update, create]}, {allow: private, operations: [read, update]}]) {
  id: ID!
  name: String!
  email: AWSEmail!
  username: String!
  preferredLocation: String
  preferredAgeRanges: [SiteAgeRangesValues]
  preferredAmusementTypes: [AmusementTypeNameValues]
  UsersFavSites: [String]
  profilePic: String
  Users: Users @belongsTo
  SiteComments: [SiteComments] @hasMany(indexName: "byUsersProfile", fields: ["id"])
}

type SiteComments @model @auth(rules: [{allow: groups, groups: ["AppAdmin"], operations: [create, read, update, delete]}, {allow: owner}, {allow: private, operations: [create, read]}, {allow: public, operations: [read]}]) {
  id: ID!
  siteRating: String
  message: String
  email: String
  username: String!
  createdDate: AWSDate!
  sitesID: ID! @index(name: "bySites")
  usersprofileID: ID! @index(name: "byUsersProfile")
}

type Sites @model @auth(rules: [{allow: groups, groups: ["AppAdmin"], provider: userPools}, {allow: owner, operations: [read, update], provider: userPools}, {allow: private, operations: [read, update], provider: userPools}, {allow: public, operations: [read], provider: apiKey}]) {
  id: ID!
  siteName: String!
  siteDescription: String!
  siteTotalRating: Float!
  siteNumberOfRatings: Float
  siteAgeRange: String!
  amusementTypeName: String!
  siteType: String!
  siteVillage: String!
  siteCity: String!
  siteCounty: String!
  siteAddress: String!
  siteLat: Float!
  siteLng: Float!
  SiteDistanceToGeoLoc: Float
  SiteTimeToGeoLocation: Float
  SiteWebsite: AWSURL
  siteImage: AWSURL
  SiteMapURL: AWSURL
  SiteComments: [SiteComments] @hasMany(indexName: "bySites", fields: ["id"])
}
 